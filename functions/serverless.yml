service:
  name: coingainer-lambda

plugins:
  - serverless-webpack
  - serverless-stack-output

custom:
  output:
    file: ./stack-${self:provider.stage}.json

package:
  exclude:
    - .gitignore
    - package.json
    - source-map-installjs
    - tsconfig.json
    - webpack.config.js
    - yarn.lock

  individually: true

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  stage: dev
  memorySize: 128

  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}

  deploymentBucket:
    # name: com.coingainer.deploy.${self:provider.region}.deploys # Overwrite the default deployment bucket
    serverSideEncryption: AES256 # when using server-side encryption

  versionFunctions: false # Optional function versioning

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: post
          path: handler
          cors: true
  market:
    handler: market.marketcap
    events:
      - http:
          method: post
          path: market
          cors: true

resources:
  Resources:
    acgMarketTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: uid
          AttributeType: S
        KeySchema:
        - AttributeName: uid
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
